=== ActiveBeans - Distributed Task Queue for Ruby applications

== VERY VERY EXPERIMENTAL, even don't clone it

= How it should work:

	class User < ActiveRecord::Base
	  def statistics
	    # .. do some dirty job
	  end
	end

	class UsersController < Application
	  def show
	    @user = User.find(params[:id])
	    @statistics = @user.async_statistics
	  end
	end

Method async_statistics will run method @user.statistics outside of webserver in remote worker.
No need to write special workers, workers are just your application with their unchanged models ActiveRecord, Sequel, Datamapper.

= Protocol TODO

ActiveBeans will send messages to workers. Messages are JSON encoded strings.
Messages can be Request and Response.
Request contains all information how to create instance of object and run appropriate method of this object.
{:c => "Person", :m => "full_name", :cm => true, :args => {}, :attrs => {}}

Response is just data returned from requested object.
{:body => "John Doe"}

Request sent from ActiveRecord and give Response object.
Reponse sent from Worker.

